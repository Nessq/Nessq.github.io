{"version":3,"sources":["hoc/withAuthRedirectComponent.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx"],"names":["withAuthRedirectComponent","Component","props","useSelector","state","auth","isAuth","to","module","exports","Dialog","className","s","dialog","id","activeClassName","active","name","Message","message","DialogsContainer","compose","connect","newMessage","dialogsPage","d","dataDialog","dd","dataMessage","dispatch","handleSendMessage","addNewMessageActionCreate","useForm","defaultValues","undefined","register","handleSubmit","reset","mapDialogsItems","map","item","mapMessages","dialogs","dialogsItems","messages","sendForm","onSubmit","data"],"mappings":"2LAKaA,EAA4B,SAACC,GAAD,OAAe,SAACC,GAErD,OADaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAEtC,cAACL,EAAD,eAAeC,IADH,cAAC,IAAD,CAAUK,GAAI,c,mBCNrCC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,SAAW,4B,iGCG1OC,EAAS,SAACR,GAEnB,OACI,qBAAKS,UAAWC,IAAEC,OAAlB,SACI,cAAC,IAAD,CAASN,GAAI,YAAYL,EAAMY,GAAIC,gBAAiBH,IAAEI,OAAtD,SAA+Dd,EAAMe,UCLpEC,EAAU,SAAChB,GACpB,OACI,8BACI,qBAAKS,UAAWC,IAAEO,QAAlB,SAA4BjB,EAAMiB,a,+BCWxCC,EAAmBC,YACrBC,aAXoB,SAAClB,GAAD,MAAY,CAChCmB,WAAanB,EAAMoB,YAAYD,WAC/BE,EAAGrB,EAAMoB,YAAYE,WACrBC,GAAIvB,EAAMoB,YAAYI,gBAGC,SAACC,GAAD,MAAe,CACtCC,kBAAoB,SAACP,GAAD,OAAgBM,EAASE,YAA0BR,SAKvEvB,IAFqBqB,ECXF,SAACnB,GAAW,IAAD,EAEU8B,YAAQ,CAACC,mBAAeC,IAAzDC,EAFuB,EAEvBA,SAAUC,EAFa,EAEbA,aAAcC,EAFD,EAECA,MAGzBC,EAAkBpC,EAAMuB,EAAEc,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAsB1B,GAAI0B,EAAK1B,GAAIG,KAAMuB,EAAKvB,MAAjCuB,EAAK1B,OACxD2B,EAAcvC,EAAMyB,GAAGY,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAuB1B,GAAI0B,EAAK1B,GAAIK,QAASqB,EAAKrB,SAApCqB,EAAK1B,OAU5D,OACI,sBAAKH,UAAWC,IAAE8B,QAAlB,UAEI,sBAAK/B,UAAWC,IAAE+B,aAAlB,cAAkCL,KAElC,sBAAK3B,UAAWC,IAAEgC,SAAlB,UACKH,EAGD,uBAAM9B,UAAWC,IAAEiC,SAAUC,SAAUV,GAjBlC,SAACW,GACd7C,EAAM4B,kBAAkBiB,EAAKxB,YAC7Bc,EAAM,CACFd,WAAa,QAcT,UACI,wCAAcY,EAAS,gBACvB,wGDXLf","file":"static/js/5.8cee5545.chunk.js","sourcesContent":["\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirectComponent = (Component) => (props) => {\r\n    let isAuth = useSelector(state => state.auth.isAuth)\r\n    if(!isAuth) return <Redirect to={'/login'}/>\r\n    return <Component {...props} />\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__u2XYY\",\"dialogsItems\":\"Dialogs_dialogsItems__3YGsX\",\"dialog\":\"Dialogs_dialog__2X3u6\",\"active\":\"Dialogs_active__ivZER\",\"messages\":\"Dialogs_messages__1lzlb\",\"message\":\"Dialogs_message__1YYCW\",\"sendForm\":\"Dialogs_sendForm__1CsMu\"};","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Dialog = (props) => {\r\n\r\n    return(\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/'+props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nexport const Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {addNewMessageActionCreate} from \"../../redux/reducer/dialogs.reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirectComponent\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    newMessage : state.dialogsPage.newMessage,\r\n    d: state.dialogsPage.dataDialog,\r\n    dd: state.dialogsPage.dataMessage,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleSendMessage : (newMessage) => dispatch(addNewMessageActionCreate(newMessage)),\r\n})\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirectComponent\r\n    )(Dialogs)\r\n;\r\nexport default DialogsContainer\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport {Dialog} from \"./Dialog/Dialog\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n    const {register, handleSubmit, reset} = useForm({defaultValues: undefined});\r\n\r\n\r\n    const mapDialogsItems = props.d.map(item => <Dialog key={item.id} id={item.id} name={item.name}/>)\r\n    const mapMessages = props.dd.map(item => <Message key={item.id} id={item.id} message={item.message}/>)\r\n\r\n    const onSubmit = (data) => {\r\n        props.handleSendMessage(data.newMessage)\r\n        reset({\r\n            newMessage : ''\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}> {mapDialogsItems}</div>\r\n\r\n            <div className={s.messages}>\r\n                {mapMessages}\r\n\r\n\r\n                <form className={s.sendForm} onSubmit={handleSubmit(onSubmit)}>\r\n                    <textarea {...register('newMessage')}/>\r\n                    <button>Отправить</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}