{"version":3,"sources":["hoc/withAuthRedirectComponent.js","components/Profile/Profile.module.css","components/Profile/Posts/Post/like.svg","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["withAuthRedirectComponent","Component","props","useSelector","state","auth","isAuth","to","module","exports","Post","className","s","content","src","img","alt","avatar","text","date","like","likeCount","iconLike","width","require","PostsContainer","connect","posts","profilePage","newTextPost","dispatch","handleAddPost","textPost","addPostActionCreate","useForm","mode","register","handleSubmit","reset","errors","formState","onSubmit","data","validMaxLength","type","addPost","noValid","onKeyDown","e","keyCode","shiftKey","preventDefault","required","maxLength","value","message","noValidMessage","noValidMessageShow","map","post","id","ProfileStatus","authMe","useState","loader","setLoader","editMode","setEditMode","profileId","userId","selfProfile","status","statusLocal","setStatusLocal","handleSetEditMode","set","useEffect","profileStatus","profileStatusEdit","Loader","profileStatusForm","onBlur","setTimeout","autoFocus","onChange","target","handleSetStatusLocal","onClick","setProfileStatus","ProfileInfo","profile","banner","style","backgroundImage","photos","large","profileAvatar","small","profileName","fullName","profileAbout","aboutMe","Profile","main","ProfileContainer","this","match","params","authId","getProfile","prevProps","prevState","snapshot","React","withRouter"],"mappings":"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","file":"static/js/6.a6f86be7.chunk.js","sourcesContent":["\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const withAuthRedirectComponent = (Component) => (props) => {\r\n    let isAuth = useSelector(state => state.auth.isAuth)\r\n    if(!isAuth) return <Redirect to={'/login'}/>\r\n    return <Component {...props} />\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__2d2Kg\",\"profile\":\"Profile_profile__3zEpL\",\"banner\":\"Profile_banner__3tOzL\",\"content\":\"Profile_content__Y1seM\",\"text\":\"Profile_text__3Aut9\",\"date\":\"Profile_date__1jT8T\",\"like\":\"Profile_like__BTSfM\",\"avatar\":\"Profile_avatar__2ifYz\",\"profileAvatar\":\"Profile_profileAvatar__1SgW2\",\"profileName\":\"Profile_profileName__1cgFw\",\"profileAbout\":\"Profile_profileAbout__x9Iz_\",\"addPost\":\"Profile_addPost__2KNHZ\",\"profileStatus\":\"Profile_profileStatus__2orkP\",\"profileStatusEdit\":\"Profile_profileStatusEdit__bZJU2\",\"profileStatusForm\":\"Profile_profileStatusForm__2t1Ja\",\"noValid\":\"Profile_noValid__3p4q9\",\"noValidMessage\":\"Profile_noValidMessage__W--Bn\",\"noValidMessageShow\":\"Profile_noValidMessageShow__ob6Ey\"};","export default __webpack_public_path__ + \"static/media/like.40a48498.svg\";","import React from 'react'\r\nimport s from './../../Profile.module.css'\r\nimport iconLike from './like.svg'\r\n\r\n\r\nexport const Post = (props) => {\r\n\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <img src={props.img} alt=\"\" className={s.avatar}/>\r\n      <p className={s.text}>{props.text}</p>\r\n      <div className={s.date}>{props.date}</div>\r\n      <div className={s.like}><span>{props.likeCount}</span> <img src={iconLike} alt=\"\" width='13'/></div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport {Post} from './Post/Post'\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n\r\nconst s = require('../Profile.module.css')\r\n\r\nexport const Posts = (props) => {\r\n\r\n    const {register, handleSubmit, reset, formState: {errors}} = useForm({\r\n        mode: 'onChange',\r\n    })\r\n\r\n\r\n    const handleAddPostEnter = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault()\r\n\r\n            handleSubmit(onSubmit)()\r\n        }\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        props.handleAddPost(data.textPost)\r\n        reset()\r\n    }\r\n\r\n\r\n    let validMaxLength = errors.textPost?.type === 'maxLength'\r\n\r\n    return (\r\n        <Fragment>\r\n            <form className={s.addPost} onSubmit={handleSubmit(onSubmit)}>\r\n                <textarea className={(validMaxLength ? s.noValid : '')}\r\n                          onKeyDown={handleAddPostEnter}\r\n                          {...register('textPost', {\r\n                              required: true,\r\n                              maxLength: {\r\n                                  value: 100,\r\n                                  message: `Максимальная длина 100 символов`\r\n                              }\r\n                          })}\r\n                />\r\n                <button>Добавить</button>\r\n            </form>\r\n            <p className={`${s.noValidMessage} ${validMaxLength ? s.noValidMessageShow : ''}`}>{errors.textPost?.message}</p>\r\n\r\n            <h2>Мои Записи</h2>\r\n\r\n            <div className=\"posts\">\r\n\r\n                {\r\n                    props.posts.map(post =>\r\n                        <Post\r\n                            key={post.id}\r\n                            text={post.text}\r\n                            img={post.img}\r\n                            date={post.date}\r\n                            likeCount={post.likeCount}\r\n                        />\r\n                    )\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import {addPostActionCreate} from \"../../../redux/reducer/profile.reducer\";\r\nimport {Posts} from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.profilePage.posts,\r\n    newTextPost: state.profilePage.newTextPost\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    handleAddPost : (textPost) => dispatch(addPostActionCreate(textPost)),\r\n})\r\n\r\nexport const PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)","import React, {useEffect, useState} from 'react';\r\nimport s from './../Profile.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport Loader from \"../../common/Loader/Loader\";\r\n\r\nexport const ProfileStatus = (props) => {\r\n\r\n    const authMe = useSelector(state=> state.auth.id)\r\n    const [loader, setLoader] = useState(true)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [selfProfile] = useState(props.profileId.userId === authMe)\r\n    const [statusLocal, setStatusLocal] = useState(()=> props.status)\r\n\r\n    const handleSetEditMode = (set) =>{\r\n        if(selfProfile) setEditMode(set)\r\n        setStatusLocal(()=> props.status)\r\n    }\r\n    const handleSetStatusLocal = (e) =>{\r\n        setStatusLocal(()=> e.target.value)\r\n    }\r\n\r\n    const handleSendStatusServer = () => {\r\n        setLoader(true)\r\n        props.setProfileStatus(statusLocal)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setStatusLocal(props.status)\r\n        setLoader(false)\r\n    }, [props.status])\r\n    return (\r\n        <div className={`${s.profileStatus} ${editMode ? s.profileStatusEdit : ''}`}>\r\n            {loader && <Loader />}\r\n            {!editMode\r\n                ?\r\n                <p onClick={()=> handleSetEditMode(true)}>{statusLocal} {selfProfile && !statusLocal ? 'добавить статус...' : ''}</p>\r\n                :\r\n               <div className={s.profileStatusForm}>\r\n                   <input\r\n                       onBlur={()=> setTimeout(()=>handleSetEditMode(false), 300)}\r\n                       autoFocus={true}\r\n                       type=\"text\"\r\n                       value={statusLocal}\r\n                       onChange={e => handleSetStatusLocal(e)}\r\n                   />\r\n                   <button onClick={handleSendStatusServer}>Сохранить</button>\r\n               </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport s from \"../Profile.module.css\";\r\nimport Loader from \"../../common/Loader/Loader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\nexport const ProfileInfo = props => {\r\n    if(!props.profile) return <Loader/>\r\n    return (\r\n        <div className={s.profile}>\r\n            <div className={s.banner} style={{backgroundImage : `url(${props.profile.photos.large})`}}>\r\n\r\n                <div className={s.profileAvatar}>\r\n                    <img src={props.profile.photos.small} alt=\"\"/>\r\n                </div>\r\n                <div className={s.profileName}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n\r\n                <div className={s.profileAbout}>\r\n                    {props.profile.aboutMe}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <ProfileStatus profileId={props.profile} status={props.status} setProfileStatus={props.setProfileStatus}/>\r\n\r\n\r\n\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport s from './Profile.module.css';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nexport const Profile = (props) => {\r\n    return (\r\n        <div className={s.main}>\r\n            <ProfileInfo profile={props.profile} status={props.status} setProfileStatus={props.setProfileStatus}/>\r\n          <PostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {getProfile, setProfileStatus} from \"../../redux/reducer/profile.reducer\";\r\nimport {withAuthRedirectComponent} from \"../../hoc/withAuthRedirectComponent\";\r\n\r\n// let a = withRouter(\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId || this.props.authId\r\n        if(userId === null) return\r\n        this.props.getProfile(userId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId)\r\n            this.props.getProfile(this.props.match.params.userId || this.props.authId)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    profile: state.profilePage.profile,\r\n    authId : state.auth.id,\r\n    status : state.profilePage.status,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getProfile,\r\n    setProfileStatus\r\n})(withAuthRedirectComponent(withRouter(ProfileContainer)))\r\n"],"sourceRoot":""}